<?php
/**
 * Epoch Cloud Management Platform
 * 
 * LICENSE
 * 
 * By viewing, using, or actively developing this application in any way, you are
 * henceforth bound the license agreement, and all of its changes, set forth by
 * ForwardFour Innovations. The license can be found, in its entirety, at this 
 * address: http://forwardfour.com/license.
 * 
 * @category   Core
 * @package    templates
 * @copyright  Copyright (c) 2011 and Onwards, ForwardFour Innovations
 * @license    http://forwardfour.com/license    [Proprietary/Closed Source]  
 */

/**
 * This class is used to introduce dynamic content to each of the static HTML 
 * administration templates. Similar classes found within this package are used
 * for a similar purpose, except for different areas of the site.
 * 
 * @category   Core
 * @package    templates
 * @see        templates.TemplateBase
 * @since      v0.1 Dev
 */

class TemplateAdmin extends TemplateBase {
/**
 * Call the super constructor
 * 
 * @return     void
 * @since      v0.1 Dev
 */
	public function __construct() {
		parent::__construct();
	}
	
/**
 * Build the plugin-bar, with all of its links and menus
 * 
 * @return     string      An HTML unordered list containing the all of the plugin menu items and links
 * @since      v0.1 Dev
 */
	private function buildPluginBar() {
	//Get the required API scripts
		import("API.Plugins");
		import("API.Templates");
		
	//Obtain a reference to all of the plugins
		$plugins = Plugins::allPluginData();
		
	//Obtain information about the currently used administration template
		$templateData = Templates::currentAdminTemplateInfo();
		
	//Build the links and menus for each plugin
		$return = "<ul class=\"pluginBarLeft\">\n";
		
		foreach($plugins as $plugin) {
			$link = $plugin['type'] == "link" ? " href=\"" . ROOT . $plugin['URL'] . "\"" : "";
			$return .= "<li><a" . $link . " style=\"background: url(" . ROOT . "plugins/" . $plugin['root'] . "/images/icons/" . $templateData['pluginIconColor'] . ".png) no-repeat center;\" title=\"" . $plugin['name'] . "\"></a></li>\n";
		}
		
		$return .= "</ul>\n";
		
	//Output the generated list
		return $return;
	}
	
/**
 * Import and build the template's beginning
 * 
 * @return     void
 * @since      v0.1 Dev
 */
	public function top() {
	//Use the data provided by the user to populate the data for the template
		$title = $this->title;
		$byLine = $this->byLine;
		
	//Use the data generated by this class's super constructor to populate the data for the template
		$lang = $this->lang;
		$siteName = $this->siteName;
		$slogan = $this->slogan;
		$template = $this->template;
		$logo = $this->logo;
		$systemRoot = $this->systemRoot;
		$templateRoot = $this->templateRoot;
		$CDNRoot = $this->CDNRoot;
		$CDNTemplateRoot = $this->CDNTemplateRoot;
		$homePage = $this->homePage;
		$headers = $this->headers;
		
	//Get the list of plugin items to add to the plugin-bar
		$plugins = $this->buildPluginBar();
		
	//Include the template
		require_once(INSTALL_ROOT . "system/templates/desktop/" . $this->template . "/top.php");
	}
	
/**
 * Import and build the template's ending
 * 
 * @return     void
 * @since      v0.1 Dev
 */
	public function bottom() {
	//Use the data generated by this class's super constructor to populate the data for the template
		$template = $this->template;
		$footer = $this->footer;
		
	//Include the template
		require_once(INSTALL_ROOT . "system/templates/desktop/" . $this->template . "/bottom.php");
	}
}
?>